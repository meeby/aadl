package FGSThreads
public

	thread RequestAndReceiveAircraftAttitude
		features
			fdRequest: in data port;
			requestAttitude: out data port;
			receiveAttitude: in data port;
			setRefAttitude: out data port;
			errorNotification: out data port;
		flows
			Flow_FDRequest: flow path fdRequest-> requestAttitude;
			Flow_AttitudeRec: flow path receiveAttitude-> setRefAttitude;
			Flow_Error1: flow path fdRequest -> errorNotification;
			Flow_Error2: flow path receiveAttitude -> errorNotification;
		properties
			Dispatch_Protocol => Aperiodic;
			Period => 10 ms;
			Compute_Execution_time => 7 ms .. 9 ms;
	end RequestAndReceiveAircraftAttitude;

	thread AlertFCFailureIndicator
		features
			errorNotification: in data port;
			sendError: out data port;
		flows
			Flow_Failure: flow path errorNotification -> sendError;
		properties
			Dispatch_Protocol => Aperiodic;
			Period => 10 ms;
			Compute_Execution_time => 1 ms .. 3 ms;
	end AlertFCFailureIndicator;

	thread StartAPCommandGeneration
		features
			apCommandRequest: in data port;
			startAPCommandGeneration: out data port;
			errorNotification: out data port;
		flows
			Flow_APCommandGenerationRequest: flow path apCommandRequest -> startAPCommandGeneration;
			Flow_Error: flow path apCommandRequest -> errorNotification;
	end StartAPCommandGeneration;

	thread RequestReferenceAttitude
		features
			refAttitudeRequest: in data port;
			requestRefAttitude: out data port;
			errorNotification: out data port;
		flows
			Flow_RARequest: flow path refAttitudeRequest -> requestRefAttitude;
			Flow_Error: flow path refAttitudeRequest -> errorNotification;
		properties
			Dispatch_Protocol => Aperiodic;
			Period => 10 ms;
			Compute_Execution_time => 3 ms .. 4 ms;
	end RequestReferenceAttitude;

	thread ReceiveReferenceAttitude
		features
			refAttitudeInput: in data port;
			sendRefAttitude: out data port;
			errorNotification: out data port;
		flows
			Flow_RAReceived: flow path refAttitudeInput -> sendRefAttitude;
			Flow_Error: flow path refAttitudeInput -> errorNotification;
		properties
			Dispatch_Protocol => Aperiodic;
			Period => 10 ms;
			Compute_Execution_time => 3 ms .. 4 ms;
	end ReceiveReferenceAttitude;
	
	thread GetFDGuidanceCommands
		features
			guidanceInput: in data port;
			sendGuidance: out data port;
			errorNotification: out data port;
		flows
			Flow_GetFDGuid: flow path guidanceInput -> sendGuidance;
			Flow_Error: flow path guidanceInput -> errorNotification;
		properties
			Dispatch_Protocol => Aperiodic;
			Period => 10 ms;
			Compute_Execution_time => 2 ms .. 2 ms;
	end GetFDGuidanceCommands;

	thread RecieveAPGuidReq
		features
			receiveRequest: in data port;
			startAPGuidCommands: out data port;
			errorNotification: out data port;
		flows
			Flow_APGuidance: flow path receiveRequest -> startAPGuidCommands;
			Flow_Error: flow path receiveRequest -> errorNotification;
	end RecieveAPGuidReq;
	
	thread SendAPCommands
		features
			receiveCommands: in data port;
			sendAPGuidCommands: out data port;
			errorNotification: out data port;
		flows
			Flow_APGuidance: flow path receiveCommands -> sendAPGuidCommands;
			Flow_Error: flow path receiveCommands -> errorNotification;
	end SendAPCommands;
	
	thread GenerateAPCommands
		features
			receiveRequest: in data port;
			sendAPGuidCommands: out data port;
			errorNotification: out data port;
		flows
			Flow_APGuidance: flow path receiveRequest -> sendAPGuidCommands;
			Flow_Error: flow path receiveRequest -> errorNotification;
	end GenerateAPCommands;

	thread DisplayFCFailureIndicator
		features
			receiveFailure: in data port;
			notifyOfFailure: out data port;
		flows
			Flow_FailureNotify: flow path receiveFailure -> notifyOfFailure;
	end DisplayFCFailureIndicator;

	thread CalculateFDGuidance
		features
			receiveCurrentAttitude: in data port;
			outputNewAttitude: out data port;
		flows
			Flow_FDGuidance: flow path receiveCurrentAttitude -> outputNewAttitude;
		properties
			Dispatch_Protocol => Aperiodic;
			Period => 10 ms;
			Compute_Execution_time => 2 ms .. 5 ms;
	end CalculateFDGuidance;

	thread FGControllerThread
	end FGControllerThread;

	thread SetReferenceAttitude
		features
			desiredReferenceAttitude: in data port;
			result: out data port;
		flows
			Flow_FDGuidance: flow path desiredReferenceAttitude -> result;
	end SetReferenceAttitude;

	thread SendReferenceAttitude
		features
			request: in data port;
			currentReferenceAttitude: out data port;
		flows
			Flow_FDGuidance: flow path request -> currentReferenceAttitude;
	end SendReferenceAttitude;

end FGSThreads;