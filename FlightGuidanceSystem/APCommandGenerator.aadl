package APGuidanceCommandGenerator
public

	with FGSThreads;

	system APGuidanceCommandGenerator
		features
			apgcg_fgc_out: out data port;
			apgcg_fgc_in: in data port;
			apgcg_fcfi: out data port;
		flows
			Flow_APGuid: flow path apgcg_fgc_in -> apgcg_fgc_out;
			Flow_Error: flow path apgcg_fgc_in -> apgcg_fcfi;
	end APGuidanceCommandGenerator;

	system implementation APGuidanceCommandGenerator.impl
		subcomponents
			commandGenProcess: process APGCGProcess.impl;
		connections
			apgcg1: port apgcg_fgc_in -> commandGenProcess.receiveAPGuidReq;
			apgcg2: port commandGenProcess.sendAPGuidCommands -> apgcg_fgc_out;
			apgcgErr: port commandGenProcess.setFCFailureIndicator -> apgcg_fcfi;
		flows
			Flow_APGuid: flow path apgcg_fgc_in -> apgcg1 -> commandGenProcess.Flow_APGuid -> apgcg2 -> apgcg_fgc_out;
			Flow_Error: flow path apgcg_fgc_in -> apgcg1 -> commandGenProcess.Flow_Error -> apgcgErr -> apgcg_fcfi;
	end APGuidanceCommandGenerator.impl;

	process APGCGProcess
		features
			receiveAPGuidReq: in data port;
			sendAPGuidCommands: out data port;
			setFCFailureIndicator: out data port;
		flows
			Flow_APGuid: flow path receiveAPGuidReq -> sendAPGuidCommands;
			Flow_Error: flow path receiveAPGuidReq -> setFCFailureIndicator;
	end APGCGProcess;

	process implementation APGCGProcess.impl
		subcomponents
			apgcgThread: thread FGSThreads::GenerateAPCommands;
		connections
			apgcg1: port receiveAPGuidReq -> apgcgThread.receiveRequest;
			apgcg2: port apgcgThread.sendAPGuidCommands -> sendAPGuidCommands;
			apgcgErr: port apgcgThread.errorNotification -> setFCFailureIndicator;
		flows
			Flow_APGuid: flow path receiveAPGuidReq -> apgcg1 -> apgcgThread.Flow_APGuidance -> apgcg2 -> sendAPGuidCommands;
			Flow_Error: flow path receiveAPGuidReq -> apgcg1 -> apgcgThread.Flow_Error -> apgcgErr -> setFCFailureIndicator;
	end APGCGProcess.impl;

end APGuidanceCommandGenerator;